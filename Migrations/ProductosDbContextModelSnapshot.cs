// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Productos_Backend.Infraestructure;

#nullable disable

namespace Productos_Backend.Migrations
{
    [DbContext(typeof(ProductosDbContext))]
    partial class ProductosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.2.22153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Productos_Backend.Feature.Productos.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Productos_Backend.Feature.Productos.ProductoLote", b =>
                {
                    b.Property<int>("LoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoteId"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_cad")
                        .HasColumnType("Date")
                        .HasColumnName("Fecha_Caducidad");

                    b.HasKey("LoteId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoLotes");
                });

            modelBuilder.Entity("Productos_Backend.Feature.SalidasInventario.SalidaInventarioDetalle", b =>
                {
                    b.Property<int>("salidaDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("salidaDetalleId"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoLotesLoteId")
                        .HasColumnType("int");

                    b.Property<int>("Saldo_Actual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("loteId")
                        .HasColumnType("int");

                    b.Property<int>("salidaEncabezadoId")
                        .HasColumnType("int");

                    b.HasKey("salidaDetalleId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoLotesLoteId");

                    b.HasIndex("salidaEncabezadoId");

                    b.ToTable("SalidaInventarioDetalles");
                });

            modelBuilder.Entity("Productos_Backend.Feature.SalidasInventario.SalidaInventarioEncabezado", b =>
                {
                    b.Property<int>("salidaEncabezadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("salidaEncabezadoId"), 1L, 1);

                    b.Property<DateTime>("fecha_Salida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("salidaEncabezadoId");

                    b.ToTable("SalidasInventarioEncabezados");
                });

            modelBuilder.Entity("Productos_Backend.Feature.Productos.ProductoLote", b =>
                {
                    b.HasOne("Productos_Backend.Feature.Productos.Producto", "Producto")
                        .WithMany("ProductoLote")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Productos_Backend.Feature.SalidasInventario.SalidaInventarioDetalle", b =>
                {
                    b.HasOne("Productos_Backend.Feature.Productos.Producto", "Producto")
                        .WithMany("Salidas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Productos_Backend.Feature.Productos.ProductoLote", "ProductoLotes")
                        .WithMany("Salidas")
                        .HasForeignKey("ProductoLotesLoteId");

                    b.HasOne("Productos_Backend.Feature.SalidasInventario.SalidaInventarioEncabezado", "SalidaInventarioEncabezado")
                        .WithMany("salidaInventarioDetalles")
                        .HasForeignKey("salidaEncabezadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("ProductoLotes");

                    b.Navigation("SalidaInventarioEncabezado");
                });

            modelBuilder.Entity("Productos_Backend.Feature.Productos.Producto", b =>
                {
                    b.Navigation("ProductoLote");

                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("Productos_Backend.Feature.Productos.ProductoLote", b =>
                {
                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("Productos_Backend.Feature.SalidasInventario.SalidaInventarioEncabezado", b =>
                {
                    b.Navigation("salidaInventarioDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
